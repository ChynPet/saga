{script,
    {"saga","0.1.0"},
    [{preLoaded,
         [atomics,counters,erl_prim_loader,erl_tracer,erlang,erts_code_purger,
          erts_dirty_process_signal_handler,erts_internal,
          erts_literal_area_collector,init,otp_ring0,persistent_term,
          prim_buffer,prim_eval,prim_file,prim_inet,prim_zip,zlib]},
     {progress,preloaded},
     {path,["$ROOT/lib/kernel-6.3.1.3/ebin","$ROOT/lib/stdlib-3.8.2.2/ebin"]},
     {primLoad,
         [error_handler,application,application_controller,application_master,
          code,code_server,erl_eval,erl_lint,erl_parse,error_logger,ets,file,
          filename,file_server,file_io_server,gen,gen_event,gen_server,heart,
          kernel,logger,logger_filters,logger_server,logger_backend,
          logger_config,logger_simple_h,lists,proc_lib,supervisor]},
     {kernel_load_completed},
     {progress,kernel_load_completed},
     {path,["$ROOT/lib/kernel-6.3.1.3/ebin"]},
     {primLoad,
         [application_starter,auth,disk_log,disk_log_1,disk_log_server,
          disk_log_sup,dist_ac,dist_util,erl_boot_server,erl_ddll,
          erl_distribution,erl_epmd,erl_reply,erl_signal_handler,erts_debug,
          gen_sctp,gen_tcp,gen_udp,global,global_group,global_search,group,
          group_history,hipe_unified_loader,inet,inet6_sctp,inet6_tcp,
          inet6_tcp_dist,inet6_udp,inet_config,inet_db,inet_dns,
          inet_gethost_native,inet_hosts,inet_parse,inet_res,inet_sctp,
          inet_tcp,inet_tcp_dist,inet_udp,kernel_config,kernel_refc,local_tcp,
          local_udp,logger_disk_log_h,logger_formatter,logger_h_common,
          logger_handler_watcher,logger_olp,logger_proxy,logger_std_h,
          logger_sup,net,net_adm,net_kernel,os,pg2,ram_file,raw_file_io,
          raw_file_io_compressed,raw_file_io_deflate,raw_file_io_delayed,
          raw_file_io_inflate,raw_file_io_list,raw_file_io_raw,rpc,seq_trace,
          standard_error,user,user_drv,user_sup,wrap_log_reader]},
     {path,["$ROOT/lib/stdlib-3.8.2.2/ebin"]},
     {primLoad,
         [array,base64,beam_lib,binary,c,calendar,dets,dets_server,dets_sup,
          dets_utils,dets_v9,dict,digraph,digraph_utils,edlin,edlin_expand,
          epp,erl_abstract_code,erl_anno,erl_bits,erl_compile,erl_error,
          erl_expand_records,erl_internal,erl_posix_msg,erl_pp,erl_scan,
          erl_tar,error_logger_file_h,error_logger_tty_h,escript,eval_bits,
          file_sorter,filelib,gb_sets,gb_trees,gen_fsm,gen_statem,io,io_lib,
          io_lib_format,io_lib_fread,io_lib_pretty,log_mf_h,maps,math,
          ms_transform,orddict,ordsets,otp_internal,pool,proplists,qlc,qlc_pt,
          queue,rand,random,re,sets,shell,shell_default,slave,sofs,string,
          supervisor_bridge,sys,timer,unicode,unicode_util,uri_string,
          win32reg,zip]},
     {path,["$ROOT/lib/compiler-7.3.2/ebin"]},
     {primLoad,
         [beam_a,beam_asm,beam_block,beam_bs,beam_bsm,beam_clean,beam_dead,
          beam_dict,beam_disasm,beam_except,beam_flatten,beam_jump,
          beam_listing,beam_opcodes,beam_peep,beam_receive,beam_record,
          beam_reorder,beam_split,beam_trim,beam_type,beam_utils,
          beam_validator,beam_z,cerl,cerl_clauses,cerl_inline,cerl_sets,
          cerl_trees,compile,core_lib,core_lint,core_parse,core_pp,core_scan,
          erl_bifs,rec_env,sys_core_alias,sys_core_bsm,sys_core_dsetel,
          sys_core_fold,sys_core_fold_lists,sys_core_inline,
          sys_pre_attributes,v3_codegen,v3_core,v3_kernel,v3_kernel_pp]},
     {path,["$ROOT/lib/elixir-1.9.0/ebin"]},
     {primLoad,
         ['Elixir.Access','Elixir.Agent','Elixir.Agent.Server',
          'Elixir.Application','Elixir.ArgumentError',
          'Elixir.ArithmeticError','Elixir.Atom','Elixir.BadArityError',
          'Elixir.BadBooleanError','Elixir.BadFunctionError',
          'Elixir.BadMapError','Elixir.BadStructError','Elixir.Base',
          'Elixir.Behaviour','Elixir.Bitwise','Elixir.Calendar',
          'Elixir.Calendar.ISO','Elixir.Calendar.TimeZoneDatabase',
          'Elixir.Calendar.UTCOnlyTimeZoneDatabase','Elixir.CaseClauseError',
          'Elixir.Code','Elixir.Code.Formatter','Elixir.Code.Identifier',
          'Elixir.Code.LoadError','Elixir.Code.Typespec','Elixir.Collectable',
          'Elixir.Collectable.BitString','Elixir.Collectable.File.Stream',
          'Elixir.Collectable.HashDict','Elixir.Collectable.HashSet',
          'Elixir.Collectable.IO.Stream','Elixir.Collectable.List',
          'Elixir.Collectable.Map','Elixir.Collectable.MapSet',
          'Elixir.CompileError','Elixir.CondClauseError','Elixir.Config',
          'Elixir.Config.Provider','Elixir.Config.Reader','Elixir.Date',
          'Elixir.Date.Range','Elixir.DateTime','Elixir.Dict',
          'Elixir.DynamicSupervisor','Elixir.Enum','Elixir.Enum.EmptyError',
          'Elixir.Enum.OutOfBoundsError','Elixir.Enumerable',
          'Elixir.Enumerable.Date.Range','Elixir.Enumerable.File.Stream',
          'Elixir.Enumerable.Function','Elixir.Enumerable.GenEvent.Stream',
          'Elixir.Enumerable.HashDict','Elixir.Enumerable.HashSet',
          'Elixir.Enumerable.IO.Stream','Elixir.Enumerable.List',
          'Elixir.Enumerable.Map','Elixir.Enumerable.MapSet',
          'Elixir.Enumerable.Range','Elixir.Enumerable.Stream',
          'Elixir.ErlangError','Elixir.Exception','Elixir.File',
          'Elixir.File.CopyError','Elixir.File.Error','Elixir.File.LinkError',
          'Elixir.File.RenameError','Elixir.File.Stat','Elixir.File.Stream',
          'Elixir.Float','Elixir.Function','Elixir.FunctionClauseError',
          'Elixir.GenEvent','Elixir.GenEvent.Stream','Elixir.GenServer',
          'Elixir.HashDict','Elixir.HashSet','Elixir.IO','Elixir.IO.ANSI',
          'Elixir.IO.ANSI.Docs','Elixir.IO.ANSI.Sequence','Elixir.IO.Stream',
          'Elixir.IO.StreamError','Elixir.Inspect','Elixir.Inspect.Algebra',
          'Elixir.Inspect.Any','Elixir.Inspect.Atom',
          'Elixir.Inspect.BitString','Elixir.Inspect.Date',
          'Elixir.Inspect.Date.Range','Elixir.Inspect.DateTime',
          'Elixir.Inspect.Error','Elixir.Inspect.Float',
          'Elixir.Inspect.Function','Elixir.Inspect.HashDict',
          'Elixir.Inspect.HashSet','Elixir.Inspect.Integer',
          'Elixir.Inspect.List','Elixir.Inspect.Map','Elixir.Inspect.MapSet',
          'Elixir.Inspect.NaiveDateTime','Elixir.Inspect.Opts',
          'Elixir.Inspect.PID','Elixir.Inspect.Port','Elixir.Inspect.Range',
          'Elixir.Inspect.Reference','Elixir.Inspect.Regex',
          'Elixir.Inspect.Stream','Elixir.Inspect.Time',
          'Elixir.Inspect.Tuple','Elixir.Inspect.Version',
          'Elixir.Inspect.Version.Requirement','Elixir.Integer',
          'Elixir.Kernel','Elixir.Kernel.CLI','Elixir.Kernel.ErrorHandler',
          'Elixir.Kernel.LexicalTracker','Elixir.Kernel.ParallelCompiler',
          'Elixir.Kernel.ParallelRequire','Elixir.Kernel.SpecialForms',
          'Elixir.Kernel.Typespec','Elixir.Kernel.Utils','Elixir.KeyError',
          'Elixir.Keyword','Elixir.List','Elixir.List.Chars',
          'Elixir.List.Chars.Atom','Elixir.List.Chars.BitString',
          'Elixir.List.Chars.Float','Elixir.List.Chars.Integer',
          'Elixir.List.Chars.List','Elixir.Macro','Elixir.Macro.Env',
          'Elixir.Map','Elixir.MapSet','Elixir.MatchError','Elixir.Module',
          'Elixir.Module.LocalsTracker','Elixir.NaiveDateTime','Elixir.Node',
          'Elixir.OptionParser','Elixir.OptionParser.ParseError',
          'Elixir.Path','Elixir.Path.Wildcard','Elixir.Port','Elixir.Process',
          'Elixir.Protocol','Elixir.Protocol.UndefinedError','Elixir.Range',
          'Elixir.Record','Elixir.Record.Extractor','Elixir.Regex',
          'Elixir.Regex.CompileError','Elixir.Registry',
          'Elixir.Registry.Partition','Elixir.Registry.Supervisor',
          'Elixir.RuntimeError','Elixir.Set','Elixir.Stream',
          'Elixir.Stream.Reducers','Elixir.String','Elixir.String.Break',
          'Elixir.String.Casing','Elixir.String.Chars',
          'Elixir.String.Chars.Atom','Elixir.String.Chars.BitString',
          'Elixir.String.Chars.Date','Elixir.String.Chars.DateTime',
          'Elixir.String.Chars.Float','Elixir.String.Chars.Integer',
          'Elixir.String.Chars.List','Elixir.String.Chars.NaiveDateTime',
          'Elixir.String.Chars.Time','Elixir.String.Chars.URI',
          'Elixir.String.Chars.Version',
          'Elixir.String.Chars.Version.Requirement','Elixir.String.Tokenizer',
          'Elixir.String.Unicode','Elixir.StringIO','Elixir.Supervisor',
          'Elixir.Supervisor.Default','Elixir.Supervisor.Spec',
          'Elixir.SyntaxError','Elixir.System','Elixir.SystemLimitError',
          'Elixir.Task','Elixir.Task.Supervised','Elixir.Task.Supervisor',
          'Elixir.Time','Elixir.TokenMissingError','Elixir.TryClauseError',
          'Elixir.Tuple','Elixir.URI','Elixir.UndefinedFunctionError',
          'Elixir.UnicodeConversionError','Elixir.Version',
          'Elixir.Version.InvalidRequirementError',
          'Elixir.Version.InvalidVersionError','Elixir.Version.Parser',
          'Elixir.Version.Requirement','Elixir.WithClauseError',elixir,
          elixir_aliases,elixir_bitstring,elixir_bootstrap,elixir_clauses,
          elixir_code_server,elixir_compiler,elixir_config,elixir_def,
          elixir_dispatch,elixir_env,elixir_erl,elixir_erl_clauses,
          elixir_erl_compiler,elixir_erl_for,elixir_erl_pass,elixir_erl_try,
          elixir_erl_var,elixir_errors,elixir_expand,elixir_fn,elixir_import,
          elixir_interpolation,elixir_lexical,elixir_locals,elixir_map,
          elixir_module,elixir_overridable,elixir_parser,elixir_quote,
          elixir_rewrite,elixir_sup,elixir_tokenizer,elixir_utils]},
     {path,["$ROOT/lib/mix-1.9.0/ebin"]},
     {primLoad,
         ['Elixir.Mix','Elixir.Mix.CLI','Elixir.Mix.Compilers.Elixir',
          'Elixir.Mix.Compilers.Erlang','Elixir.Mix.Compilers.Test',
          'Elixir.Mix.Config','Elixir.Mix.Dep','Elixir.Mix.Dep.Converger',
          'Elixir.Mix.Dep.ElixirSCM','Elixir.Mix.Dep.Fetcher',
          'Elixir.Mix.Dep.Loader','Elixir.Mix.Dep.Lock',
          'Elixir.Mix.Dep.Umbrella','Elixir.Mix.ElixirVersionError',
          'Elixir.Mix.Error','Elixir.Mix.Generator','Elixir.Mix.Hex',
          'Elixir.Mix.InvalidTaskError','Elixir.Mix.Local',
          'Elixir.Mix.Local.Installer','Elixir.Mix.NoProjectError',
          'Elixir.Mix.NoTaskError','Elixir.Mix.Project',
          'Elixir.Mix.ProjectStack','Elixir.Mix.PublicKey','Elixir.Mix.Rebar',
          'Elixir.Mix.Release','Elixir.Mix.RemoteConverger','Elixir.Mix.SCM',
          'Elixir.Mix.SCM.Git','Elixir.Mix.SCM.Path','Elixir.Mix.Shell',
          'Elixir.Mix.Shell.IO','Elixir.Mix.Shell.Process',
          'Elixir.Mix.Shell.Quiet','Elixir.Mix.State','Elixir.Mix.Task',
          'Elixir.Mix.Task.Compiler','Elixir.Mix.Task.Compiler.Diagnostic',
          'Elixir.Mix.Tasks.App.Start','Elixir.Mix.Tasks.App.Tree',
          'Elixir.Mix.Tasks.Archive','Elixir.Mix.Tasks.Archive.Build',
          'Elixir.Mix.Tasks.Archive.Check','Elixir.Mix.Tasks.Archive.Install',
          'Elixir.Mix.Tasks.Archive.Uninstall','Elixir.Mix.Tasks.Clean',
          'Elixir.Mix.Tasks.Cmd','Elixir.Mix.Tasks.Compile',
          'Elixir.Mix.Tasks.Compile.All','Elixir.Mix.Tasks.Compile.App',
          'Elixir.Mix.Tasks.Compile.Elixir','Elixir.Mix.Tasks.Compile.Erlang',
          'Elixir.Mix.Tasks.Compile.Leex',
          'Elixir.Mix.Tasks.Compile.Protocols',
          'Elixir.Mix.Tasks.Compile.Xref','Elixir.Mix.Tasks.Compile.Yecc',
          'Elixir.Mix.Tasks.Deps','Elixir.Mix.Tasks.Deps.Clean',
          'Elixir.Mix.Tasks.Deps.Compile','Elixir.Mix.Tasks.Deps.Get',
          'Elixir.Mix.Tasks.Deps.Loadpaths',
          'Elixir.Mix.Tasks.Deps.Precompile','Elixir.Mix.Tasks.Deps.Tree',
          'Elixir.Mix.Tasks.Deps.Unlock','Elixir.Mix.Tasks.Deps.Update',
          'Elixir.Mix.Tasks.Do','Elixir.Mix.Tasks.Escript',
          'Elixir.Mix.Tasks.Escript.Build','Elixir.Mix.Tasks.Escript.Install',
          'Elixir.Mix.Tasks.Escript.Uninstall','Elixir.Mix.Tasks.Format',
          'Elixir.Mix.Tasks.Help','Elixir.Mix.Tasks.Iex',
          'Elixir.Mix.Tasks.Loadconfig','Elixir.Mix.Tasks.Loadpaths',
          'Elixir.Mix.Tasks.Local','Elixir.Mix.Tasks.Local.Hex',
          'Elixir.Mix.Tasks.Local.PublicKeys','Elixir.Mix.Tasks.Local.Rebar',
          'Elixir.Mix.Tasks.New','Elixir.Mix.Tasks.Profile.Cprof',
          'Elixir.Mix.Tasks.Profile.Eprof','Elixir.Mix.Tasks.Profile.Fprof',
          'Elixir.Mix.Tasks.Release','Elixir.Mix.Tasks.Release.Init',
          'Elixir.Mix.Tasks.Run','Elixir.Mix.Tasks.Test',
          'Elixir.Mix.Tasks.Test.Cover','Elixir.Mix.Tasks.WillRecompile',
          'Elixir.Mix.Tasks.Xref','Elixir.Mix.TasksServer',
          'Elixir.Mix.Utils']},
     {path,["$ROOT/lib/iex-1.9.0/ebin"]},
     {primLoad,
         ['Elixir.IEx','Elixir.IEx.App','Elixir.IEx.Autocomplete',
          'Elixir.IEx.Broker','Elixir.IEx.CLI','Elixir.IEx.Config',
          'Elixir.IEx.Evaluator','Elixir.IEx.Helpers','Elixir.IEx.History',
          'Elixir.IEx.Info','Elixir.IEx.Info.Any','Elixir.IEx.Info.Atom',
          'Elixir.IEx.Info.BitString','Elixir.IEx.Info.Date',
          'Elixir.IEx.Info.Float','Elixir.IEx.Info.Function',
          'Elixir.IEx.Info.Integer','Elixir.IEx.Info.List',
          'Elixir.IEx.Info.Map','Elixir.IEx.Info.NaiveDateTime',
          'Elixir.IEx.Info.PID','Elixir.IEx.Info.Port',
          'Elixir.IEx.Info.Reference','Elixir.IEx.Info.Time',
          'Elixir.IEx.Info.Tuple','Elixir.IEx.Introspection','Elixir.IEx.Pry',
          'Elixir.IEx.Server','Elixir.IEx.State']},
     {path,["$ROOT/lib/logger-1.9.0/ebin"]},
     {primLoad,
         ['Elixir.Logger','Elixir.Logger.App',
          'Elixir.Logger.BackendSupervisor','Elixir.Logger.Backends.Console',
          'Elixir.Logger.Config','Elixir.Logger.ErlangHandler',
          'Elixir.Logger.ErrorHandler','Elixir.Logger.Formatter',
          'Elixir.Logger.Translator','Elixir.Logger.Utils',
          'Elixir.Logger.Watcher']},
     {path,["$ROOT/lib/gen_state_machine-2.0.5/ebin"]},
     {primLoad,
         ['Elixir.GenStateMachine','Elixir.GenStateMachine.Application',
          'Elixir.GenStateMachine.Translator']},
     {path,["$ROOT/lib/asn1-5.0.8/ebin"]},
     {primLoad,[asn1rt_nif]},
     {path,["$ROOT/lib/crypto-4.4.2.1/ebin"]},
     {primLoad,[crypto,crypto_ec_curves]},
     {path,["$ROOT/lib/public_key-1.6.6.1/ebin"]},
     {primLoad,
         ['OTP-PUB-KEY','PKCS-FRAME',pubkey_cert,pubkey_cert_records,
          pubkey_crl,pubkey_pbe,pubkey_pem,pubkey_ssh,public_key]},
     {path,["$ROOT/lib/ssl-9.2.3.5/ebin"]},
     {primLoad,
         [dtls_connection,dtls_connection_sup,dtls_handshake,
          dtls_listener_sup,dtls_packet_demux,dtls_record,dtls_socket,dtls_v1,
          inet6_tls_dist,inet_tls_dist,ssl,ssl_admin_sup,ssl_alert,ssl_app,
          ssl_certificate,ssl_cipher,ssl_cipher_format,ssl_config,
          ssl_connection,ssl_connection_sup,ssl_crl,ssl_crl_cache,
          ssl_crl_cache_api,ssl_crl_hash_dir,ssl_dist_admin_sup,
          ssl_dist_connection_sup,ssl_dist_sup,ssl_handshake,
          ssl_listen_tracker_sup,ssl_manager,ssl_pem_cache,ssl_pkix_db,
          ssl_record,ssl_session,ssl_session_cache,ssl_session_cache_api,
          ssl_srp_primes,ssl_sup,ssl_v3,tls_connection,tls_connection_sup,
          tls_handshake,tls_record,tls_sender,tls_socket,tls_v1]},
     {path,["$ROOT/lib/kafka_ex-0.10.0/ebin"]},
     {primLoad,
         ['Elixir.Enumerable.KafkaEx.Stream','Elixir.KafkaEx',
          'Elixir.KafkaEx.ApiVersions','Elixir.KafkaEx.Compression',
          'Elixir.KafkaEx.Config','Elixir.KafkaEx.ConsumerGroup',
          'Elixir.KafkaEx.ConsumerGroup.Heartbeat',
          'Elixir.KafkaEx.ConsumerGroup.Heartbeat.State',
          'Elixir.KafkaEx.ConsumerGroup.Manager',
          'Elixir.KafkaEx.ConsumerGroup.Manager.State',
          'Elixir.KafkaEx.ConsumerGroup.PartitionAssignment',
          'Elixir.KafkaEx.ConsumerGroupRequiredError',
          'Elixir.KafkaEx.DefaultPartitioner','Elixir.KafkaEx.GenConsumer',
          'Elixir.KafkaEx.GenConsumer.State',
          'Elixir.KafkaEx.GenConsumer.Supervisor',
          'Elixir.KafkaEx.InvalidConsumerGroupError',
          'Elixir.KafkaEx.NetworkClient','Elixir.KafkaEx.Partitioner',
          'Elixir.KafkaEx.Protocol','Elixir.KafkaEx.Protocol.ApiVersions',
          'Elixir.KafkaEx.Protocol.ApiVersions.ApiVersion',
          'Elixir.KafkaEx.Protocol.ApiVersions.Response',
          'Elixir.KafkaEx.Protocol.Common',
          'Elixir.KafkaEx.Protocol.ConsumerMetadata',
          'Elixir.KafkaEx.Protocol.ConsumerMetadata.Response',
          'Elixir.KafkaEx.Protocol.CreateTopics',
          'Elixir.KafkaEx.Protocol.CreateTopics.ConfigEntry',
          'Elixir.KafkaEx.Protocol.CreateTopics.ReplicaAssignment',
          'Elixir.KafkaEx.Protocol.CreateTopics.Request',
          'Elixir.KafkaEx.Protocol.CreateTopics.Response',
          'Elixir.KafkaEx.Protocol.CreateTopics.TopicError',
          'Elixir.KafkaEx.Protocol.CreateTopics.TopicRequest',
          'Elixir.KafkaEx.Protocol.DeleteTopics',
          'Elixir.KafkaEx.Protocol.DeleteTopics.Request',
          'Elixir.KafkaEx.Protocol.DeleteTopics.Response',
          'Elixir.KafkaEx.Protocol.DeleteTopics.TopicError',
          'Elixir.KafkaEx.Protocol.Fetch',
          'Elixir.KafkaEx.Protocol.Fetch.Message',
          'Elixir.KafkaEx.Protocol.Fetch.Request',
          'Elixir.KafkaEx.Protocol.Fetch.Response',
          'Elixir.KafkaEx.Protocol.Heartbeat',
          'Elixir.KafkaEx.Protocol.Heartbeat.Request',
          'Elixir.KafkaEx.Protocol.Heartbeat.Response',
          'Elixir.KafkaEx.Protocol.JoinGroup',
          'Elixir.KafkaEx.Protocol.JoinGroup.Request',
          'Elixir.KafkaEx.Protocol.JoinGroup.Response',
          'Elixir.KafkaEx.Protocol.LeaveGroup',
          'Elixir.KafkaEx.Protocol.LeaveGroup.Request',
          'Elixir.KafkaEx.Protocol.LeaveGroup.Response',
          'Elixir.KafkaEx.Protocol.Metadata',
          'Elixir.KafkaEx.Protocol.Metadata.Broker',
          'Elixir.KafkaEx.Protocol.Metadata.PartitionMetadata',
          'Elixir.KafkaEx.Protocol.Metadata.Request',
          'Elixir.KafkaEx.Protocol.Metadata.Response',
          'Elixir.KafkaEx.Protocol.Metadata.TopicMetadata',
          'Elixir.KafkaEx.Protocol.Offset',
          'Elixir.KafkaEx.Protocol.Offset.Request',
          'Elixir.KafkaEx.Protocol.Offset.Response',
          'Elixir.KafkaEx.Protocol.OffsetCommit',
          'Elixir.KafkaEx.Protocol.OffsetCommit.Request',
          'Elixir.KafkaEx.Protocol.OffsetCommit.Response',
          'Elixir.KafkaEx.Protocol.OffsetFetch',
          'Elixir.KafkaEx.Protocol.OffsetFetch.Request',
          'Elixir.KafkaEx.Protocol.OffsetFetch.Response',
          'Elixir.KafkaEx.Protocol.Produce',
          'Elixir.KafkaEx.Protocol.Produce.Message',
          'Elixir.KafkaEx.Protocol.Produce.Request',
          'Elixir.KafkaEx.Protocol.Produce.Response',
          'Elixir.KafkaEx.Protocol.SyncGroup',
          'Elixir.KafkaEx.Protocol.SyncGroup.Assignment',
          'Elixir.KafkaEx.Protocol.SyncGroup.Request',
          'Elixir.KafkaEx.Protocol.SyncGroup.Response',
          'Elixir.KafkaEx.Server','Elixir.KafkaEx.Server.State',
          'Elixir.KafkaEx.Server0P10AndLater','Elixir.KafkaEx.Server0P8P0',
          'Elixir.KafkaEx.Server0P8P2','Elixir.KafkaEx.Server0P9P0',
          'Elixir.KafkaEx.Socket','Elixir.KafkaEx.Stream',
          'Elixir.KafkaEx.Supervisor','Elixir.KafkaEx.Utils.Murmur']},
     {path,["$ROOT/lib/poison-3.1.0/ebin"]},
     {primLoad,
         ['Elixir.Poison','Elixir.Poison.Decode','Elixir.Poison.Decoder',
          'Elixir.Poison.Decoder.Any','Elixir.Poison.Encode',
          'Elixir.Poison.EncodeError','Elixir.Poison.Encoder',
          'Elixir.Poison.Encoder.Any','Elixir.Poison.Encoder.Atom',
          'Elixir.Poison.Encoder.BitString','Elixir.Poison.Encoder.Date',
          'Elixir.Poison.Encoder.DateTime','Elixir.Poison.Encoder.Float',
          'Elixir.Poison.Encoder.HashSet','Elixir.Poison.Encoder.Integer',
          'Elixir.Poison.Encoder.List','Elixir.Poison.Encoder.Map',
          'Elixir.Poison.Encoder.MapSet',
          'Elixir.Poison.Encoder.NaiveDateTime','Elixir.Poison.Encoder.Range',
          'Elixir.Poison.Encoder.Stream','Elixir.Poison.Encoder.Time',
          'Elixir.Poison.Parser','Elixir.Poison.Pretty',
          'Elixir.Poison.SyntaxError']},
     {path,["$ROOT/lib/protobuf-0.6.3/ebin"]},
     {primLoad,
         ['Elixir.Google.Protobuf.Compiler.CodeGeneratorRequest',
          'Elixir.Google.Protobuf.Compiler.CodeGeneratorResponse',
          'Elixir.Google.Protobuf.Compiler.CodeGeneratorResponse.File',
          'Elixir.Google.Protobuf.Compiler.Version',
          'Elixir.Google.Protobuf.DescriptorProto',
          'Elixir.Google.Protobuf.DescriptorProto.ExtensionRange',
          'Elixir.Google.Protobuf.DescriptorProto.ReservedRange',
          'Elixir.Google.Protobuf.EnumDescriptorProto',
          'Elixir.Google.Protobuf.EnumDescriptorProto.EnumReservedRange',
          'Elixir.Google.Protobuf.EnumOptions',
          'Elixir.Google.Protobuf.EnumValueDescriptorProto',
          'Elixir.Google.Protobuf.EnumValueOptions',
          'Elixir.Google.Protobuf.ExtensionRangeOptions',
          'Elixir.Google.Protobuf.FieldDescriptorProto',
          'Elixir.Google.Protobuf.FieldDescriptorProto.Label',
          'Elixir.Google.Protobuf.FieldDescriptorProto.Type',
          'Elixir.Google.Protobuf.FieldOptions',
          'Elixir.Google.Protobuf.FieldOptions.CType',
          'Elixir.Google.Protobuf.FieldOptions.JSType',
          'Elixir.Google.Protobuf.FileDescriptorProto',
          'Elixir.Google.Protobuf.FileDescriptorSet',
          'Elixir.Google.Protobuf.FileOptions',
          'Elixir.Google.Protobuf.FileOptions.OptimizeMode',
          'Elixir.Google.Protobuf.GeneratedCodeInfo',
          'Elixir.Google.Protobuf.GeneratedCodeInfo.Annotation',
          'Elixir.Google.Protobuf.MessageOptions',
          'Elixir.Google.Protobuf.MethodDescriptorProto',
          'Elixir.Google.Protobuf.MethodOptions',
          'Elixir.Google.Protobuf.MethodOptions.IdempotencyLevel',
          'Elixir.Google.Protobuf.OneofDescriptorProto',
          'Elixir.Google.Protobuf.OneofOptions',
          'Elixir.Google.Protobuf.ServiceDescriptorProto',
          'Elixir.Google.Protobuf.ServiceOptions',
          'Elixir.Google.Protobuf.SourceCodeInfo',
          'Elixir.Google.Protobuf.SourceCodeInfo.Location',
          'Elixir.Google.Protobuf.UninterpretedOption',
          'Elixir.Google.Protobuf.UninterpretedOption.NamePart',
          'Elixir.Protobuf','Elixir.Protobuf.Builder','Elixir.Protobuf.DSL',
          'Elixir.Protobuf.DecodeError','Elixir.Protobuf.Decoder',
          'Elixir.Protobuf.EncodeError','Elixir.Protobuf.Encoder',
          'Elixir.Protobuf.FieldProps','Elixir.Protobuf.InvalidError',
          'Elixir.Protobuf.MessageProps','Elixir.Protobuf.Protoc.CLI',
          'Elixir.Protobuf.Protoc.Context','Elixir.Protobuf.Protoc.Generator',
          'Elixir.Protobuf.Protoc.Generator.Enum',
          'Elixir.Protobuf.Protoc.Generator.Message',
          'Elixir.Protobuf.Protoc.Generator.Service',
          'Elixir.Protobuf.Protoc.Generator.Util',
          'Elixir.Protobuf.Protoc.Template','Elixir.Protobuf.TypeUtil',
          'Elixir.Protobuf.WireTypes']},
     {path,["$ROOT/lib/ranch-1.7.1/ebin"]},
     {primLoad,
         [ranch,ranch_acceptor,ranch_acceptors_sup,ranch_app,ranch_conns_sup,
          ranch_crc32c,ranch_listener_sup,ranch_protocol,ranch_proxy_header,
          ranch_server,ranch_ssl,ranch_sup,ranch_tcp,ranch_transport]},
     {path,["$ROOT/lib/cowlib-2.7.3/ebin"]},
     {primLoad,
         [cow_base64url,cow_cookie,cow_date,cow_hpack,cow_http,cow_http2,
          cow_http2_machine,cow_http_hd,cow_http_te,cow_iolists,cow_mimetypes,
          cow_multipart,cow_qs,cow_spdy,cow_sse,cow_uri,cow_ws]},
     {path,["$ROOT/lib/cowboy-2.6.3/ebin"]},
     {primLoad,
         [cowboy,cowboy_app,cowboy_bstr,cowboy_children,cowboy_clear,
          cowboy_clock,cowboy_compress_h,cowboy_constraints,cowboy_handler,
          cowboy_http,cowboy_http2,cowboy_loop,cowboy_metrics_h,
          cowboy_middleware,cowboy_req,cowboy_rest,cowboy_router,
          cowboy_static,cowboy_stream,cowboy_stream_h,cowboy_sub_protocol,
          cowboy_sup,cowboy_tls,cowboy_tracer_h,cowboy_websocket]},
     {path,["$ROOT/lib/gun-1.3.0/ebin"]},
     {primLoad,
         [gun,gun_app,gun_content_handler,gun_data_h,gun_http,gun_http2,
          gun_sse_h,gun_sup,gun_tcp,gun_tls,gun_ws,gun_ws_h]},
     {path,["$ROOT/lib/grpc-0.4.0/ebin"]},
     {primLoad,
         ['Elixir.GRPC','Elixir.GRPC.Adapter.Cowboy',
          'Elixir.GRPC.Adapter.Cowboy.Handler','Elixir.GRPC.Adapter.Gun',
          'Elixir.GRPC.Channel','Elixir.GRPC.Client.Stream',
          'Elixir.GRPC.ClientInterceptor','Elixir.GRPC.Codec',
          'Elixir.GRPC.Codec.Erlpack','Elixir.GRPC.Codec.Proto',
          'Elixir.GRPC.Compressor','Elixir.GRPC.Compressor.Gzip',
          'Elixir.GRPC.Credential','Elixir.GRPC.Endpoint',
          'Elixir.GRPC.Logger.Client','Elixir.GRPC.Logger.Server',
          'Elixir.GRPC.Message','Elixir.GRPC.Message.Protobuf',
          'Elixir.GRPC.RPCError','Elixir.GRPC.Server',
          'Elixir.GRPC.Server.Stream','Elixir.GRPC.Server.Supervisor',
          'Elixir.GRPC.ServerInterceptor','Elixir.GRPC.Service',
          'Elixir.GRPC.Status','Elixir.GRPC.Stream','Elixir.GRPC.Stub',
          'Elixir.GRPC.TimeUtils','Elixir.GRPC.Transport.HTTP2',
          'Elixir.GRPC.Transport.Utils','Elixir.Mix.Tasks.Grpc.Server',
          grpc_stream_h]},
     {path,["$ROOT/lib/saga-0.1.0/ebin"]},
     {primLoad,
         ['Elixir.Answer.Authentication','Elixir.Answer.Email',
          'Elixir.Answer.Facebook','Elixir.Answer.Facebook.User',
          'Elixir.Answer.Instagram','Elixir.Answer.Instagram.User',
          'Elixir.Answer.Photo.API','Elixir.Authentication',
          'Elixir.ConsumerGroup','Elixir.Email','Elixir.ExampleGenConsumer',
          'Elixir.Facebook','Elixir.Instagram','Elixir.Kafka.Topics',
          'Elixir.Notification','Elixir.Photo.API',
          'Elixir.Poison.Encoder.Answer.Authentication',
          'Elixir.Poison.Encoder.Answer.Email',
          'Elixir.Poison.Encoder.Answer.Facebook',
          'Elixir.Poison.Encoder.Answer.Facebook.User',
          'Elixir.Poison.Encoder.Answer.Instagram',
          'Elixir.Poison.Encoder.Answer.Instagram.User',
          'Elixir.Poison.Encoder.Answer.Photo.API',
          'Elixir.Saga.Api.InitialState.Service',
          'Elixir.Saga.Api.InitialState.Stub','Elixir.Saga.Api.ResponseEmail',
          'Elixir.Saga.Api.ResponseFacebook',
          'Elixir.Saga.Api.ResponseInstagram','Elixir.Saga.Api.User',
          'Elixir.Saga.Api.UserFacebook','Elixir.Saga.Api.UserInstagram',
          'Elixir.Saga.Application','Elixir.Saga.Endpoint',
          'Elixir.Saga.Interceptors.AuthClient',
          'Elixir.Saga.Interceptors.AuthServer','Elixir.Saga.Server',
          'Elixir.Sagas.Email.SignIn','Elixir.Sagas.Email.SignUp',
          'Elixir.Sagas.Facebook.SignIn','Elixir.Sagas.Facebook.SignUp',
          'Elixir.Sagas.Instagram.SignIn','Elixir.Sagas.Instagram.SignUp',
          'Elixir.User']},
     {path,["$ROOT/lib/sasl-3.3/ebin"]},
     {primLoad,
         [alarm_handler,erlsrv,format_lib_supp,misc_supp,rb,rb_format_supp,
          release_handler,release_handler_1,sasl,sasl_report,
          sasl_report_file_h,sasl_report_tty_h,systools,systools_lib,
          systools_make,systools_rc,systools_relup]},
     {path,["$ROOT/lib/runtime_tools-1.13.2/ebin"]},
     {primLoad,
         [appmon_info,dbg,dyntrace,erts_alloc_config,msacc,observer_backend,
          runtime_tools,runtime_tools_sup,scheduler,system_information,
          ttb_autostart]},
     {path,["$ROOT/lib/artificery-0.4.2/ebin"]},
     {primLoad,
         ['Elixir.Artificery','Elixir.Artificery.Command',
          'Elixir.Artificery.Console','Elixir.Artificery.Console.Color',
          'Elixir.Artificery.Console.Color.ANSI',
          'Elixir.Artificery.Console.Events',
          'Elixir.Artificery.Console.Prompt',
          'Elixir.Artificery.Console.Spinner',
          'Elixir.Artificery.Console.Table','Elixir.Artificery.Entry',
          'Elixir.Artificery.Option']},
     {path,["$ROOT/lib/distillery-2.1.1/ebin"]},
     {primLoad,
         ['Elixir.Distillery.Cookies','Elixir.Distillery.Releases.App',
          'Elixir.Distillery.Releases.Appup',
          'Elixir.Distillery.Releases.Appup.Transform',
          'Elixir.Distillery.Releases.Appup.TransformError',
          'Elixir.Distillery.Releases.Appup.Utils',
          'Elixir.Distillery.Releases.Archiver',
          'Elixir.Distillery.Releases.Archiver.Archive',
          'Elixir.Distillery.Releases.Assembler',
          'Elixir.Distillery.Releases.BootScript',
          'Elixir.Distillery.Releases.Checks',
          'Elixir.Distillery.Releases.Checks.Cookie',
          'Elixir.Distillery.Releases.Checks.Erts',
          'Elixir.Distillery.Releases.Checks.LoadedOrphanedApps',
          'Elixir.Distillery.Releases.Config',
          'Elixir.Distillery.Releases.Config.LoadError',
          'Elixir.Distillery.Releases.Config.Provider',
          'Elixir.Distillery.Releases.Config.Providers.Elixir',
          'Elixir.Distillery.Releases.Environment',
          'Elixir.Distillery.Releases.Errors',
          'Elixir.Distillery.Releases.Overlays',
          'Elixir.Distillery.Releases.Plugin',
          'Elixir.Distillery.Releases.Profile',
          'Elixir.Distillery.Releases.Release',
          'Elixir.Distillery.Releases.Runtime.Control',
          'Elixir.Distillery.Releases.Runtime.Pidfile',
          'Elixir.Distillery.Releases.Shell',
          'Elixir.Distillery.Releases.Shell.Macros',
          'Elixir.Distillery.Releases.Utils',
          'Elixir.Mix.Tasks.Distillery.Gen.Appup',
          'Elixir.Mix.Tasks.Distillery.Init',
          'Elixir.Mix.Tasks.Distillery.Init.MixMock',
          'Elixir.Mix.Tasks.Distillery.Init.MixMock.Project',
          'Elixir.Mix.Tasks.Distillery.Release',
          'Elixir.Mix.Tasks.Distillery.Release.Clean']},
     {progress,modules_loaded},
     {path,
         ["$ROOT/lib/kernel-6.3.1.3/ebin","$ROOT/lib/stdlib-3.8.2.2/ebin",
          "$ROOT/lib/compiler-7.3.2/ebin","$ROOT/lib/elixir-1.9.0/ebin",
          "$ROOT/lib/mix-1.9.0/ebin","$ROOT/lib/iex-1.9.0/ebin",
          "$ROOT/lib/logger-1.9.0/ebin",
          "$ROOT/lib/gen_state_machine-2.0.5/ebin",
          "$ROOT/lib/asn1-5.0.8/ebin","$ROOT/lib/crypto-4.4.2.1/ebin",
          "$ROOT/lib/public_key-1.6.6.1/ebin","$ROOT/lib/ssl-9.2.3.5/ebin",
          "$ROOT/lib/kafka_ex-0.10.0/ebin","$ROOT/lib/poison-3.1.0/ebin",
          "$ROOT/lib/protobuf-0.6.3/ebin","$ROOT/lib/ranch-1.7.1/ebin",
          "$ROOT/lib/cowlib-2.7.3/ebin","$ROOT/lib/cowboy-2.6.3/ebin",
          "$ROOT/lib/gun-1.3.0/ebin","$ROOT/lib/grpc-0.4.0/ebin",
          "$ROOT/lib/saga-0.1.0/ebin","$ROOT/lib/sasl-3.3/ebin",
          "$ROOT/lib/runtime_tools-1.13.2/ebin",
          "$ROOT/lib/artificery-0.4.2/ebin",
          "$ROOT/lib/distillery-2.1.1/ebin"]},
     {kernelProcess,heart,{heart,start,[]}},
     {kernelProcess,logger,{logger_server,start_link,[]}},
     {kernelProcess,application_controller,
         {application_controller,start,
             [{application,kernel,
                  [{description,"ERTS  CXC 138 10"},
                   {vsn,"6.3.1.3"},
                   {id,[]},
                   {modules,
                       [application,application_controller,application_master,
                        application_starter,auth,code,code_server,dist_util,
                        erl_boot_server,erl_distribution,erl_reply,
                        erl_signal_handler,error_handler,error_logger,file,
                        file_server,file_io_server,global,global_group,
                        global_search,group,group_history,heart,
                        hipe_unified_loader,inet6_tcp,inet6_tcp_dist,
                        inet6_udp,inet6_sctp,inet_config,inet_hosts,
                        inet_gethost_native,inet_tcp_dist,kernel,
                        kernel_config,kernel_refc,local_tcp,local_udp,logger,
                        logger_backend,logger_config,logger_disk_log_h,
                        logger_filters,logger_formatter,logger_h_common,
                        logger_handler_watcher,logger_olp,logger_proxy,
                        logger_server,logger_simple_h,logger_std_h,logger_sup,
                        net,net_adm,net_kernel,os,ram_file,rpc,user,user_drv,
                        user_sup,disk_log,disk_log_1,disk_log_server,
                        disk_log_sup,dist_ac,erl_ddll,erl_epmd,erts_debug,
                        gen_tcp,gen_udp,gen_sctp,inet,inet_db,inet_dns,
                        inet_parse,inet_res,inet_tcp,inet_udp,inet_sctp,pg2,
                        raw_file_io,raw_file_io_compressed,
                        raw_file_io_deflate,raw_file_io_delayed,
                        raw_file_io_inflate,raw_file_io_list,raw_file_io_raw,
                        seq_trace,standard_error,wrap_log_reader]},
                   {registered,
                       [application_controller,erl_reply,auth,boot_server,
                        code_server,disk_log_server,disk_log_sup,
                        erl_prim_loader,error_logger,file_server_2,
                        fixtable_server,global_group,global_name_server,heart,
                        init,kernel_config,kernel_refc,kernel_sup,logger,
                        logger_handler_watcher,logger_sup,net_kernel,net_sup,
                        rex,user,os_server,ddll_server,erl_epmd,inet_db,pg2]},
                   {applications,[]},
                   {included_applications,[]},
                   {env,
                       [{logger_level,notice},{logger_sasl_compatible,false}]},
                   {maxT,infinity},
                   {maxP,infinity},
                   {mod,{kernel,[]}}]}]}},
     {progress,init_kernel_started},
     {apply,
         {application,load,
             [{application,stdlib,
                  [{description,"ERTS  CXC 138 10"},
                   {vsn,"3.8.2.2"},
                   {id,[]},
                   {modules,
                       [array,base64,beam_lib,binary,c,calendar,dets,
                        dets_server,dets_sup,dets_utils,dets_v9,dict,digraph,
                        digraph_utils,edlin,edlin_expand,epp,eval_bits,
                        erl_abstract_code,erl_anno,erl_bits,erl_compile,
                        erl_error,erl_eval,erl_expand_records,erl_internal,
                        erl_lint,erl_parse,erl_posix_msg,erl_pp,erl_scan,
                        erl_tar,error_logger_file_h,error_logger_tty_h,
                        escript,ets,file_sorter,filelib,filename,gb_trees,
                        gb_sets,gen,gen_event,gen_fsm,gen_server,gen_statem,
                        io,io_lib,io_lib_format,io_lib_fread,io_lib_pretty,
                        lists,log_mf_h,maps,math,ms_transform,orddict,ordsets,
                        otp_internal,pool,proc_lib,proplists,qlc,qlc_pt,queue,
                        rand,random,re,sets,shell,shell_default,slave,sofs,
                        string,supervisor,supervisor_bridge,sys,timer,unicode,
                        unicode_util,uri_string,win32reg,zip]},
                   {registered,
                       [timer_server,rsh_starter,take_over_monitor,
                        pool_master,dets]},
                   {applications,[kernel]},
                   {included_applications,[]},
                   {env,[]},
                   {maxT,infinity},
                   {maxP,infinity}]}]}},
     {apply,
         {application,load,
             [{application,compiler,
                  [{description,"ERTS  CXC 138 10"},
                   {vsn,"7.3.2"},
                   {id,[]},
                   {modules,
                       [beam_a,beam_asm,beam_block,beam_bs,beam_bsm,
                        beam_clean,beam_dead,beam_dict,beam_disasm,
                        beam_except,beam_flatten,beam_jump,beam_listing,
                        beam_opcodes,beam_peep,beam_receive,beam_reorder,
                        beam_record,beam_split,beam_trim,beam_type,beam_utils,
                        beam_validator,beam_z,cerl,cerl_clauses,cerl_inline,
                        cerl_sets,cerl_trees,compile,core_scan,core_lint,
                        core_parse,core_pp,core_lib,erl_bifs,rec_env,
                        sys_core_alias,sys_core_bsm,sys_core_dsetel,
                        sys_core_fold,sys_core_fold_lists,sys_core_inline,
                        sys_pre_attributes,v3_codegen,v3_core,v3_kernel,
                        v3_kernel_pp]},
                   {registered,[]},
                   {applications,[stdlib,kernel]},
                   {included_applications,[]},
                   {env,[]},
                   {maxT,infinity},
                   {maxP,infinity}]}]}},
     {apply,
         {application,load,
             [{application,elixir,
                  [{description,"elixir"},
                   {vsn,"1.9.0"},
                   {id,[]},
                   {modules,
                       ['Elixir.Access','Elixir.Agent.Server','Elixir.Agent',
                        'Elixir.Application','Elixir.ArgumentError',
                        'Elixir.ArithmeticError','Elixir.Atom',
                        'Elixir.BadArityError','Elixir.BadBooleanError',
                        'Elixir.BadFunctionError','Elixir.BadMapError',
                        'Elixir.BadStructError','Elixir.Base',
                        'Elixir.Behaviour','Elixir.Bitwise',
                        'Elixir.Calendar.ISO',
                        'Elixir.Calendar.TimeZoneDatabase',
                        'Elixir.Calendar.UTCOnlyTimeZoneDatabase',
                        'Elixir.Calendar','Elixir.CaseClauseError',
                        'Elixir.Code.Formatter','Elixir.Code.Identifier',
                        'Elixir.Code.LoadError','Elixir.Code.Typespec',
                        'Elixir.Code','Elixir.Collectable.BitString',
                        'Elixir.Collectable.File.Stream',
                        'Elixir.Collectable.HashDict',
                        'Elixir.Collectable.HashSet',
                        'Elixir.Collectable.IO.Stream',
                        'Elixir.Collectable.List','Elixir.Collectable.Map',
                        'Elixir.Collectable.MapSet','Elixir.Collectable',
                        'Elixir.CompileError','Elixir.CondClauseError',
                        'Elixir.Config.Provider','Elixir.Config.Reader',
                        'Elixir.Config','Elixir.Date.Range','Elixir.Date',
                        'Elixir.DateTime','Elixir.Dict',
                        'Elixir.DynamicSupervisor','Elixir.Enum.EmptyError',
                        'Elixir.Enum.OutOfBoundsError','Elixir.Enum',
                        'Elixir.Enumerable.Date.Range',
                        'Elixir.Enumerable.File.Stream',
                        'Elixir.Enumerable.Function',
                        'Elixir.Enumerable.GenEvent.Stream',
                        'Elixir.Enumerable.HashDict',
                        'Elixir.Enumerable.HashSet',
                        'Elixir.Enumerable.IO.Stream',
                        'Elixir.Enumerable.List','Elixir.Enumerable.Map',
                        'Elixir.Enumerable.MapSet','Elixir.Enumerable.Range',
                        'Elixir.Enumerable.Stream','Elixir.Enumerable',
                        'Elixir.ErlangError','Elixir.Exception',
                        'Elixir.File.CopyError','Elixir.File.Error',
                        'Elixir.File.LinkError','Elixir.File.RenameError',
                        'Elixir.File.Stat','Elixir.File.Stream','Elixir.File',
                        'Elixir.Float','Elixir.Function',
                        'Elixir.FunctionClauseError','Elixir.GenEvent.Stream',
                        'Elixir.GenEvent','Elixir.GenServer',
                        'Elixir.HashDict','Elixir.HashSet',
                        'Elixir.IO.ANSI.Docs','Elixir.IO.ANSI.Sequence',
                        'Elixir.IO.ANSI','Elixir.IO.Stream',
                        'Elixir.IO.StreamError','Elixir.IO',
                        'Elixir.Inspect.Algebra','Elixir.Inspect.Any',
                        'Elixir.Inspect.Atom','Elixir.Inspect.BitString',
                        'Elixir.Inspect.Date.Range','Elixir.Inspect.Date',
                        'Elixir.Inspect.DateTime','Elixir.Inspect.Error',
                        'Elixir.Inspect.Float','Elixir.Inspect.Function',
                        'Elixir.Inspect.HashDict','Elixir.Inspect.HashSet',
                        'Elixir.Inspect.Integer','Elixir.Inspect.List',
                        'Elixir.Inspect.Map','Elixir.Inspect.MapSet',
                        'Elixir.Inspect.NaiveDateTime','Elixir.Inspect.Opts',
                        'Elixir.Inspect.PID','Elixir.Inspect.Port',
                        'Elixir.Inspect.Range','Elixir.Inspect.Reference',
                        'Elixir.Inspect.Regex','Elixir.Inspect.Stream',
                        'Elixir.Inspect.Time','Elixir.Inspect.Tuple',
                        'Elixir.Inspect.Version.Requirement',
                        'Elixir.Inspect.Version','Elixir.Inspect',
                        'Elixir.Integer','Elixir.Kernel.CLI',
                        'Elixir.Kernel.ErrorHandler',
                        'Elixir.Kernel.LexicalTracker',
                        'Elixir.Kernel.ParallelCompiler',
                        'Elixir.Kernel.ParallelRequire',
                        'Elixir.Kernel.SpecialForms','Elixir.Kernel.Typespec',
                        'Elixir.Kernel.Utils','Elixir.Kernel',
                        'Elixir.KeyError','Elixir.Keyword',
                        'Elixir.List.Chars.Atom',
                        'Elixir.List.Chars.BitString',
                        'Elixir.List.Chars.Float','Elixir.List.Chars.Integer',
                        'Elixir.List.Chars.List','Elixir.List.Chars',
                        'Elixir.List','Elixir.Macro.Env','Elixir.Macro',
                        'Elixir.Map','Elixir.MapSet','Elixir.MatchError',
                        'Elixir.Module.LocalsTracker','Elixir.Module',
                        'Elixir.NaiveDateTime','Elixir.Node',
                        'Elixir.OptionParser.ParseError',
                        'Elixir.OptionParser','Elixir.Path.Wildcard',
                        'Elixir.Path','Elixir.Port','Elixir.Process',
                        'Elixir.Protocol.UndefinedError','Elixir.Protocol',
                        'Elixir.Range','Elixir.Record.Extractor',
                        'Elixir.Record','Elixir.Regex.CompileError',
                        'Elixir.Regex','Elixir.Registry.Partition',
                        'Elixir.Registry.Supervisor','Elixir.Registry',
                        'Elixir.RuntimeError','Elixir.Set',
                        'Elixir.Stream.Reducers','Elixir.Stream',
                        'Elixir.String.Break','Elixir.String.Casing',
                        'Elixir.String.Chars.Atom',
                        'Elixir.String.Chars.BitString',
                        'Elixir.String.Chars.Date',
                        'Elixir.String.Chars.DateTime',
                        'Elixir.String.Chars.Float',
                        'Elixir.String.Chars.Integer',
                        'Elixir.String.Chars.List',
                        'Elixir.String.Chars.NaiveDateTime',
                        'Elixir.String.Chars.Time','Elixir.String.Chars.URI',
                        'Elixir.String.Chars.Version.Requirement',
                        'Elixir.String.Chars.Version','Elixir.String.Chars',
                        'Elixir.String.Tokenizer','Elixir.String.Unicode',
                        'Elixir.String','Elixir.StringIO',
                        'Elixir.Supervisor.Default','Elixir.Supervisor.Spec',
                        'Elixir.Supervisor','Elixir.SyntaxError',
                        'Elixir.System','Elixir.SystemLimitError',
                        'Elixir.Task.Supervised','Elixir.Task.Supervisor',
                        'Elixir.Task','Elixir.Time',
                        'Elixir.TokenMissingError','Elixir.TryClauseError',
                        'Elixir.Tuple','Elixir.URI',
                        'Elixir.UndefinedFunctionError',
                        'Elixir.UnicodeConversionError',
                        'Elixir.Version.InvalidRequirementError',
                        'Elixir.Version.InvalidVersionError',
                        'Elixir.Version.Parser','Elixir.Version.Requirement',
                        'Elixir.Version','Elixir.WithClauseError',elixir,
                        elixir_aliases,elixir_bitstring,elixir_bootstrap,
                        elixir_clauses,elixir_code_server,elixir_compiler,
                        elixir_config,elixir_def,elixir_dispatch,elixir_env,
                        elixir_erl,elixir_erl_clauses,elixir_erl_compiler,
                        elixir_erl_for,elixir_erl_pass,elixir_erl_try,
                        elixir_erl_var,elixir_errors,elixir_expand,elixir_fn,
                        elixir_import,elixir_interpolation,elixir_lexical,
                        elixir_locals,elixir_map,elixir_module,
                        elixir_overridable,elixir_parser,elixir_quote,
                        elixir_rewrite,elixir_sup,elixir_tokenizer,
                        elixir_utils]},
                   {registered,[elixir_sup,elixir_config,elixir_code_server]},
                   {applications,[compiler,stdlib,kernel]},
                   {included_applications,[]},
                   {env,
                       [{check_endianness,true},
                        {ansi_enabled,false},
                        {time_zone_database,
                            'Elixir.Calendar.UTCOnlyTimeZoneDatabase'}]},
                   {maxT,infinity},
                   {maxP,infinity},
                   {mod,{elixir,[]}}]}]}},
     {apply,
         {application,load,
             [{application,mix,
                  [{description,"mix"},
                   {vsn,"1.9.0"},
                   {id,[]},
                   {modules,
                       ['Elixir.Mix','Elixir.Mix.CLI',
                        'Elixir.Mix.Compilers.Elixir',
                        'Elixir.Mix.Compilers.Erlang',
                        'Elixir.Mix.Compilers.Test','Elixir.Mix.Config',
                        'Elixir.Mix.Dep','Elixir.Mix.Dep.Converger',
                        'Elixir.Mix.Dep.ElixirSCM','Elixir.Mix.Dep.Fetcher',
                        'Elixir.Mix.Dep.Loader','Elixir.Mix.Dep.Lock',
                        'Elixir.Mix.Dep.Umbrella',
                        'Elixir.Mix.ElixirVersionError','Elixir.Mix.Error',
                        'Elixir.Mix.Generator','Elixir.Mix.Hex',
                        'Elixir.Mix.InvalidTaskError','Elixir.Mix.Local',
                        'Elixir.Mix.Local.Installer',
                        'Elixir.Mix.NoProjectError','Elixir.Mix.NoTaskError',
                        'Elixir.Mix.Project','Elixir.Mix.ProjectStack',
                        'Elixir.Mix.PublicKey','Elixir.Mix.Rebar',
                        'Elixir.Mix.Release','Elixir.Mix.RemoteConverger',
                        'Elixir.Mix.SCM','Elixir.Mix.SCM.Git',
                        'Elixir.Mix.SCM.Path','Elixir.Mix.Shell',
                        'Elixir.Mix.Shell.IO','Elixir.Mix.Shell.Process',
                        'Elixir.Mix.Shell.Quiet','Elixir.Mix.State',
                        'Elixir.Mix.Task','Elixir.Mix.Task.Compiler',
                        'Elixir.Mix.Task.Compiler.Diagnostic',
                        'Elixir.Mix.Tasks.App.Start',
                        'Elixir.Mix.Tasks.App.Tree',
                        'Elixir.Mix.Tasks.Archive',
                        'Elixir.Mix.Tasks.Archive.Build',
                        'Elixir.Mix.Tasks.Archive.Check',
                        'Elixir.Mix.Tasks.Archive.Install',
                        'Elixir.Mix.Tasks.Archive.Uninstall',
                        'Elixir.Mix.Tasks.Clean','Elixir.Mix.Tasks.Cmd',
                        'Elixir.Mix.Tasks.Compile',
                        'Elixir.Mix.Tasks.Compile.All',
                        'Elixir.Mix.Tasks.Compile.App',
                        'Elixir.Mix.Tasks.Compile.Elixir',
                        'Elixir.Mix.Tasks.Compile.Erlang',
                        'Elixir.Mix.Tasks.Compile.Leex',
                        'Elixir.Mix.Tasks.Compile.Protocols',
                        'Elixir.Mix.Tasks.Compile.Xref',
                        'Elixir.Mix.Tasks.Compile.Yecc',
                        'Elixir.Mix.Tasks.Deps','Elixir.Mix.Tasks.Deps.Clean',
                        'Elixir.Mix.Tasks.Deps.Compile',
                        'Elixir.Mix.Tasks.Deps.Get',
                        'Elixir.Mix.Tasks.Deps.Loadpaths',
                        'Elixir.Mix.Tasks.Deps.Precompile',
                        'Elixir.Mix.Tasks.Deps.Tree',
                        'Elixir.Mix.Tasks.Deps.Unlock',
                        'Elixir.Mix.Tasks.Deps.Update','Elixir.Mix.Tasks.Do',
                        'Elixir.Mix.Tasks.Escript',
                        'Elixir.Mix.Tasks.Escript.Build',
                        'Elixir.Mix.Tasks.Escript.Install',
                        'Elixir.Mix.Tasks.Escript.Uninstall',
                        'Elixir.Mix.Tasks.Format','Elixir.Mix.Tasks.Help',
                        'Elixir.Mix.Tasks.Iex','Elixir.Mix.Tasks.Loadconfig',
                        'Elixir.Mix.Tasks.Loadpaths','Elixir.Mix.Tasks.Local',
                        'Elixir.Mix.Tasks.Local.Hex',
                        'Elixir.Mix.Tasks.Local.PublicKeys',
                        'Elixir.Mix.Tasks.Local.Rebar','Elixir.Mix.Tasks.New',
                        'Elixir.Mix.Tasks.Profile.Cprof',
                        'Elixir.Mix.Tasks.Profile.Eprof',
                        'Elixir.Mix.Tasks.Profile.Fprof',
                        'Elixir.Mix.Tasks.Release',
                        'Elixir.Mix.Tasks.Release.Init',
                        'Elixir.Mix.Tasks.Run','Elixir.Mix.Tasks.Test',
                        'Elixir.Mix.Tasks.Test.Cover',
                        'Elixir.Mix.Tasks.WillRecompile',
                        'Elixir.Mix.Tasks.Xref','Elixir.Mix.TasksServer',
                        'Elixir.Mix.Utils']},
                   {registered,
                       ['Elixir.Mix.State','Elixir.Mix.TasksServer',
                        'Elixir.Mix.ProjectStack']},
                   {applications,[elixir,stdlib,kernel]},
                   {included_applications,[]},
                   {env,[{colors,[]}]},
                   {maxT,infinity},
                   {maxP,infinity},
                   {mod,{'Elixir.Mix',[]}}]}]}},
     {apply,
         {application,load,
             [{application,iex,
                  [{description,"iex"},
                   {vsn,"1.9.0"},
                   {id,[]},
                   {modules,
                       ['Elixir.IEx','Elixir.IEx.App',
                        'Elixir.IEx.Autocomplete','Elixir.IEx.Broker',
                        'Elixir.IEx.CLI','Elixir.IEx.Config',
                        'Elixir.IEx.Evaluator','Elixir.IEx.Helpers',
                        'Elixir.IEx.History','Elixir.IEx.Info',
                        'Elixir.IEx.Info.Any','Elixir.IEx.Info.Atom',
                        'Elixir.IEx.Info.BitString','Elixir.IEx.Info.Date',
                        'Elixir.IEx.Info.Float','Elixir.IEx.Info.Function',
                        'Elixir.IEx.Info.Integer','Elixir.IEx.Info.List',
                        'Elixir.IEx.Info.Map','Elixir.IEx.Info.NaiveDateTime',
                        'Elixir.IEx.Info.PID','Elixir.IEx.Info.Port',
                        'Elixir.IEx.Info.Reference','Elixir.IEx.Info.Time',
                        'Elixir.IEx.Info.Tuple','Elixir.IEx.Introspection',
                        'Elixir.IEx.Pry','Elixir.IEx.Server',
                        'Elixir.IEx.State']},
                   {registered,
                       ['Elixir.IEx.Broker','Elixir.IEx.Config',
                        'Elixir.IEx.Pry','Elixir.IEx.Supervisor']},
                   {applications,[elixir,stdlib,kernel]},
                   {included_applications,[]},
                   {env,
                       [{colors,[]},
                        {inspect,[{pretty,true}]},
                        {history_size,20},
                        {default_prompt,<<"%prefix(%counter)>">>},
                        {alive_prompt,<<"%prefix(%node)%counter>">>}]},
                   {maxT,infinity},
                   {maxP,infinity},
                   {mod,{'Elixir.IEx.App',[]}}]}]}},
     {apply,
         {application,load,
             [{application,logger,
                  [{description,"logger"},
                   {vsn,"1.9.0"},
                   {id,[]},
                   {modules,
                       ['Elixir.Logger','Elixir.Logger.App',
                        'Elixir.Logger.BackendSupervisor',
                        'Elixir.Logger.Backends.Console',
                        'Elixir.Logger.Config','Elixir.Logger.ErlangHandler',
                        'Elixir.Logger.ErrorHandler',
                        'Elixir.Logger.Formatter','Elixir.Logger.Translator',
                        'Elixir.Logger.Utils','Elixir.Logger.Watcher']},
                   {registered,
                       ['Elixir.Logger','Elixir.Logger.BackendSupervisor',
                        'Elixir.Logger.Supervisor','Elixir.Logger.Watcher']},
                   {applications,[elixir,stdlib,kernel]},
                   {included_applications,[]},
                   {env,
                       [{level,debug},
                        {utc_log,false},
                        {truncate,8096},
                        {backends,[console]},
                        {translators,[{'Elixir.Logger.Translator',translate}]},
                        {sync_threshold,20},
                        {discard_threshold,500},
                        {handle_otp_reports,true},
                        {handle_sasl_reports,false},
                        {discard_threshold_periodic_check,30000},
                        {discard_threshold_for_error_logger,500},
                        {compile_time_purge_level,debug},
                        {compile_time_purge_matching,[]},
                        {compile_time_application,nil},
                        {translator_inspect_opts,[]},
                        {console,[]}]},
                   {maxT,infinity},
                   {maxP,infinity},
                   {mod,{'Elixir.Logger.App',[]}}]}]}},
     {apply,
         {application,load,
             [{application,gen_state_machine,
                  [{description,"An Elixir wrapper for gen_statem."},
                   {vsn,"2.0.5"},
                   {id,[]},
                   {modules,
                       ['Elixir.GenStateMachine',
                        'Elixir.GenStateMachine.Application',
                        'Elixir.GenStateMachine.Translator']},
                   {registered,[]},
                   {applications,[elixir,logger,stdlib,kernel]},
                   {included_applications,[]},
                   {env,[]},
                   {maxT,infinity},
                   {maxP,infinity},
                   {mod,{'Elixir.GenStateMachine.Application',[]}}]}]}},
     {apply,
         {application,load,
             [{application,asn1,
                  [{description,"The Erlang ASN1 compiler version 5.0.8"},
                   {vsn,"5.0.8"},
                   {id,[]},
                   {modules,[asn1rt_nif]},
                   {registered,[asn1_ns,asn1db]},
                   {applications,[stdlib,kernel]},
                   {included_applications,[]},
                   {env,[]},
                   {maxT,infinity},
                   {maxP,infinity}]}]}},
     {apply,
         {application,load,
             [{application,crypto,
                  [{description,"CRYPTO"},
                   {vsn,"4.4.2.1"},
                   {id,[]},
                   {modules,[crypto,crypto_ec_curves]},
                   {registered,[]},
                   {applications,[stdlib,kernel]},
                   {included_applications,[]},
                   {env,[{fips_mode,false},{rand_cache_size,896}]},
                   {maxT,infinity},
                   {maxP,infinity}]}]}},
     {apply,
         {application,load,
             [{application,public_key,
                  [{description,"Public key infrastructure"},
                   {vsn,"1.6.6.1"},
                   {id,[]},
                   {modules,
                       [public_key,pubkey_pem,pubkey_pbe,pubkey_ssh,
                        pubkey_cert,pubkey_cert_records,pubkey_crl,
                        'OTP-PUB-KEY','PKCS-FRAME']},
                   {registered,[]},
                   {applications,[asn1,crypto,stdlib,kernel]},
                   {included_applications,[]},
                   {env,[]},
                   {maxT,infinity},
                   {maxP,infinity}]}]}},
     {apply,
         {application,load,
             [{application,ssl,
                  [{description,"Erlang/OTP SSL application"},
                   {vsn,"9.2.3.5"},
                   {id,[]},
                   {modules,
                       [tls_connection,tls_handshake,tls_record,tls_socket,
                        tls_v1,ssl_v3,tls_connection_sup,tls_sender,
                        dtls_connection,dtls_handshake,dtls_record,
                        dtls_socket,dtls_v1,dtls_connection_sup,
                        dtls_packet_demux,dtls_listener_sup,ssl,
                        ssl_session_cache_api,ssl_config,ssl_connection,
                        ssl_handshake,ssl_record,ssl_cipher,ssl_cipher_format,
                        ssl_srp_primes,ssl_alert,ssl_listen_tracker_sup,
                        inet_tls_dist,inet6_tls_dist,ssl_dist_sup,
                        ssl_dist_connection_sup,ssl_dist_admin_sup,
                        ssl_session,ssl_session_cache,ssl_manager,
                        ssl_pem_cache,ssl_pkix_db,ssl_certificate,ssl_crl,
                        ssl_crl_cache,ssl_crl_cache_api,ssl_crl_hash_dir,
                        ssl_app,ssl_sup,ssl_admin_sup,ssl_connection_sup]},
                   {registered,[ssl_sup,ssl_manager]},
                   {applications,[public_key,crypto,stdlib,kernel]},
                   {included_applications,[]},
                   {env,[]},
                   {maxT,infinity},
                   {maxP,infinity},
                   {mod,{ssl_app,[]}}]}]}},
     {apply,
         {application,load,
             [{application,kafka_ex,
                  [{description,"Kafka client for Elixir/Erlang."},
                   {vsn,"0.10.0"},
                   {id,[]},
                   {modules,
                       ['Elixir.Enumerable.KafkaEx.Stream','Elixir.KafkaEx',
                        'Elixir.KafkaEx.ApiVersions',
                        'Elixir.KafkaEx.Compression','Elixir.KafkaEx.Config',
                        'Elixir.KafkaEx.ConsumerGroup',
                        'Elixir.KafkaEx.ConsumerGroup.Heartbeat',
                        'Elixir.KafkaEx.ConsumerGroup.Heartbeat.State',
                        'Elixir.KafkaEx.ConsumerGroup.Manager',
                        'Elixir.KafkaEx.ConsumerGroup.Manager.State',
                        'Elixir.KafkaEx.ConsumerGroup.PartitionAssignment',
                        'Elixir.KafkaEx.ConsumerGroupRequiredError',
                        'Elixir.KafkaEx.DefaultPartitioner',
                        'Elixir.KafkaEx.GenConsumer',
                        'Elixir.KafkaEx.GenConsumer.State',
                        'Elixir.KafkaEx.GenConsumer.Supervisor',
                        'Elixir.KafkaEx.InvalidConsumerGroupError',
                        'Elixir.KafkaEx.NetworkClient',
                        'Elixir.KafkaEx.Partitioner',
                        'Elixir.KafkaEx.Protocol',
                        'Elixir.KafkaEx.Protocol.ApiVersions',
                        'Elixir.KafkaEx.Protocol.ApiVersions.ApiVersion',
                        'Elixir.KafkaEx.Protocol.ApiVersions.Response',
                        'Elixir.KafkaEx.Protocol.Common',
                        'Elixir.KafkaEx.Protocol.ConsumerMetadata',
                        'Elixir.KafkaEx.Protocol.ConsumerMetadata.Response',
                        'Elixir.KafkaEx.Protocol.CreateTopics',
                        'Elixir.KafkaEx.Protocol.CreateTopics.ConfigEntry',
                        'Elixir.KafkaEx.Protocol.CreateTopics.ReplicaAssignment',
                        'Elixir.KafkaEx.Protocol.CreateTopics.Request',
                        'Elixir.KafkaEx.Protocol.CreateTopics.Response',
                        'Elixir.KafkaEx.Protocol.CreateTopics.TopicError',
                        'Elixir.KafkaEx.Protocol.CreateTopics.TopicRequest',
                        'Elixir.KafkaEx.Protocol.DeleteTopics',
                        'Elixir.KafkaEx.Protocol.DeleteTopics.Request',
                        'Elixir.KafkaEx.Protocol.DeleteTopics.Response',
                        'Elixir.KafkaEx.Protocol.DeleteTopics.TopicError',
                        'Elixir.KafkaEx.Protocol.Fetch',
                        'Elixir.KafkaEx.Protocol.Fetch.Message',
                        'Elixir.KafkaEx.Protocol.Fetch.Request',
                        'Elixir.KafkaEx.Protocol.Fetch.Response',
                        'Elixir.KafkaEx.Protocol.Heartbeat',
                        'Elixir.KafkaEx.Protocol.Heartbeat.Request',
                        'Elixir.KafkaEx.Protocol.Heartbeat.Response',
                        'Elixir.KafkaEx.Protocol.JoinGroup',
                        'Elixir.KafkaEx.Protocol.JoinGroup.Request',
                        'Elixir.KafkaEx.Protocol.JoinGroup.Response',
                        'Elixir.KafkaEx.Protocol.LeaveGroup',
                        'Elixir.KafkaEx.Protocol.LeaveGroup.Request',
                        'Elixir.KafkaEx.Protocol.LeaveGroup.Response',
                        'Elixir.KafkaEx.Protocol.Metadata',
                        'Elixir.KafkaEx.Protocol.Metadata.Broker',
                        'Elixir.KafkaEx.Protocol.Metadata.PartitionMetadata',
                        'Elixir.KafkaEx.Protocol.Metadata.Request',
                        'Elixir.KafkaEx.Protocol.Metadata.Response',
                        'Elixir.KafkaEx.Protocol.Metadata.TopicMetadata',
                        'Elixir.KafkaEx.Protocol.Offset',
                        'Elixir.KafkaEx.Protocol.Offset.Request',
                        'Elixir.KafkaEx.Protocol.Offset.Response',
                        'Elixir.KafkaEx.Protocol.OffsetCommit',
                        'Elixir.KafkaEx.Protocol.OffsetCommit.Request',
                        'Elixir.KafkaEx.Protocol.OffsetCommit.Response',
                        'Elixir.KafkaEx.Protocol.OffsetFetch',
                        'Elixir.KafkaEx.Protocol.OffsetFetch.Request',
                        'Elixir.KafkaEx.Protocol.OffsetFetch.Response',
                        'Elixir.KafkaEx.Protocol.Produce',
                        'Elixir.KafkaEx.Protocol.Produce.Message',
                        'Elixir.KafkaEx.Protocol.Produce.Request',
                        'Elixir.KafkaEx.Protocol.Produce.Response',
                        'Elixir.KafkaEx.Protocol.SyncGroup',
                        'Elixir.KafkaEx.Protocol.SyncGroup.Assignment',
                        'Elixir.KafkaEx.Protocol.SyncGroup.Request',
                        'Elixir.KafkaEx.Protocol.SyncGroup.Response',
                        'Elixir.KafkaEx.Server','Elixir.KafkaEx.Server.State',
                        'Elixir.KafkaEx.Server0P10AndLater',
                        'Elixir.KafkaEx.Server0P8P0',
                        'Elixir.KafkaEx.Server0P8P2',
                        'Elixir.KafkaEx.Server0P9P0','Elixir.KafkaEx.Socket',
                        'Elixir.KafkaEx.Stream','Elixir.KafkaEx.Supervisor',
                        'Elixir.KafkaEx.Utils.Murmur']},
                   {registered,[]},
                   {applications,[elixir,logger,ssl,stdlib,kernel]},
                   {included_applications,[]},
                   {env,[]},
                   {maxT,infinity},
                   {maxP,infinity},
                   {mod,{'Elixir.KafkaEx',[]}}]}]}},
     {apply,
         {application,load,
             [{application,poison,
                  [{description,
                       "An incredibly fast, pure Elixir JSON library"},
                   {vsn,"3.1.0"},
                   {id,[]},
                   {modules,
                       ['Elixir.Poison','Elixir.Poison.Decode',
                        'Elixir.Poison.Decoder','Elixir.Poison.Decoder.Any',
                        'Elixir.Poison.Encode','Elixir.Poison.EncodeError',
                        'Elixir.Poison.Encoder','Elixir.Poison.Encoder.Any',
                        'Elixir.Poison.Encoder.Atom',
                        'Elixir.Poison.Encoder.BitString',
                        'Elixir.Poison.Encoder.Date',
                        'Elixir.Poison.Encoder.DateTime',
                        'Elixir.Poison.Encoder.Float',
                        'Elixir.Poison.Encoder.HashSet',
                        'Elixir.Poison.Encoder.Integer',
                        'Elixir.Poison.Encoder.List',
                        'Elixir.Poison.Encoder.Map',
                        'Elixir.Poison.Encoder.MapSet',
                        'Elixir.Poison.Encoder.NaiveDateTime',
                        'Elixir.Poison.Encoder.Range',
                        'Elixir.Poison.Encoder.Stream',
                        'Elixir.Poison.Encoder.Time','Elixir.Poison.Parser',
                        'Elixir.Poison.Pretty','Elixir.Poison.SyntaxError']},
                   {registered,[]},
                   {applications,[elixir,stdlib,kernel]},
                   {included_applications,[]},
                   {env,[]},
                   {maxT,infinity},
                   {maxP,infinity}]}]}},
     {apply,
         {application,load,
             [{application,protobuf,
                  [{description,
                       "A pure Elixir implementation of Google Protobuf."},
                   {vsn,"0.6.3"},
                   {id,[]},
                   {modules,
                       ['Elixir.Google.Protobuf.Compiler.CodeGeneratorRequest',
                        'Elixir.Google.Protobuf.Compiler.CodeGeneratorResponse',
                        'Elixir.Google.Protobuf.Compiler.CodeGeneratorResponse.File',
                        'Elixir.Google.Protobuf.Compiler.Version',
                        'Elixir.Google.Protobuf.DescriptorProto',
                        'Elixir.Google.Protobuf.DescriptorProto.ExtensionRange',
                        'Elixir.Google.Protobuf.DescriptorProto.ReservedRange',
                        'Elixir.Google.Protobuf.EnumDescriptorProto',
                        'Elixir.Google.Protobuf.EnumDescriptorProto.EnumReservedRange',
                        'Elixir.Google.Protobuf.EnumOptions',
                        'Elixir.Google.Protobuf.EnumValueDescriptorProto',
                        'Elixir.Google.Protobuf.EnumValueOptions',
                        'Elixir.Google.Protobuf.ExtensionRangeOptions',
                        'Elixir.Google.Protobuf.FieldDescriptorProto',
                        'Elixir.Google.Protobuf.FieldDescriptorProto.Label',
                        'Elixir.Google.Protobuf.FieldDescriptorProto.Type',
                        'Elixir.Google.Protobuf.FieldOptions',
                        'Elixir.Google.Protobuf.FieldOptions.CType',
                        'Elixir.Google.Protobuf.FieldOptions.JSType',
                        'Elixir.Google.Protobuf.FileDescriptorProto',
                        'Elixir.Google.Protobuf.FileDescriptorSet',
                        'Elixir.Google.Protobuf.FileOptions',
                        'Elixir.Google.Protobuf.FileOptions.OptimizeMode',
                        'Elixir.Google.Protobuf.GeneratedCodeInfo',
                        'Elixir.Google.Protobuf.GeneratedCodeInfo.Annotation',
                        'Elixir.Google.Protobuf.MessageOptions',
                        'Elixir.Google.Protobuf.MethodDescriptorProto',
                        'Elixir.Google.Protobuf.MethodOptions',
                        'Elixir.Google.Protobuf.MethodOptions.IdempotencyLevel',
                        'Elixir.Google.Protobuf.OneofDescriptorProto',
                        'Elixir.Google.Protobuf.OneofOptions',
                        'Elixir.Google.Protobuf.ServiceDescriptorProto',
                        'Elixir.Google.Protobuf.ServiceOptions',
                        'Elixir.Google.Protobuf.SourceCodeInfo',
                        'Elixir.Google.Protobuf.SourceCodeInfo.Location',
                        'Elixir.Google.Protobuf.UninterpretedOption',
                        'Elixir.Google.Protobuf.UninterpretedOption.NamePart',
                        'Elixir.Protobuf','Elixir.Protobuf.Builder',
                        'Elixir.Protobuf.DSL','Elixir.Protobuf.DecodeError',
                        'Elixir.Protobuf.Decoder',
                        'Elixir.Protobuf.EncodeError',
                        'Elixir.Protobuf.Encoder',
                        'Elixir.Protobuf.FieldProps',
                        'Elixir.Protobuf.InvalidError',
                        'Elixir.Protobuf.MessageProps',
                        'Elixir.Protobuf.Protoc.CLI',
                        'Elixir.Protobuf.Protoc.Context',
                        'Elixir.Protobuf.Protoc.Generator',
                        'Elixir.Protobuf.Protoc.Generator.Enum',
                        'Elixir.Protobuf.Protoc.Generator.Message',
                        'Elixir.Protobuf.Protoc.Generator.Service',
                        'Elixir.Protobuf.Protoc.Generator.Util',
                        'Elixir.Protobuf.Protoc.Template',
                        'Elixir.Protobuf.TypeUtil',
                        'Elixir.Protobuf.WireTypes']},
                   {registered,[]},
                   {applications,[elixir,logger,stdlib,kernel]},
                   {included_applications,[]},
                   {env,[]},
                   {maxT,infinity},
                   {maxP,infinity}]}]}},
     {apply,
         {application,load,
             [{application,ranch,
                  [{description,"Socket acceptor pool for TCP protocols."},
                   {vsn,"1.7.1"},
                   {id,[]},
                   {modules,
                       [ranch,ranch_acceptor,ranch_acceptors_sup,ranch_app,
                        ranch_conns_sup,ranch_crc32c,ranch_listener_sup,
                        ranch_protocol,ranch_proxy_header,ranch_server,
                        ranch_ssl,ranch_sup,ranch_tcp,ranch_transport]},
                   {registered,[ranch_sup,ranch_server]},
                   {applications,[ssl,stdlib,kernel]},
                   {included_applications,[]},
                   {env,[]},
                   {maxT,infinity},
                   {maxP,infinity},
                   {mod,{ranch_app,[]}}]}]}},
     {apply,
         {application,load,
             [{application,cowlib,
                  [{description,
                       "Support library for manipulating Web protocols."},
                   {vsn,"2.7.3"},
                   {id,[]},
                   {modules,
                       [cow_base64url,cow_cookie,cow_date,cow_hpack,cow_http,
                        cow_http2,cow_http2_machine,cow_http_hd,cow_http_te,
                        cow_iolists,cow_mimetypes,cow_multipart,cow_qs,
                        cow_spdy,cow_sse,cow_uri,cow_ws]},
                   {registered,[]},
                   {applications,[crypto,stdlib,kernel]},
                   {included_applications,[]},
                   {env,[]},
                   {maxT,infinity},
                   {maxP,infinity}]}]}},
     {apply,
         {application,load,
             [{application,cowboy,
                  [{description,"Small, fast, modern HTTP server."},
                   {vsn,"2.6.3"},
                   {id,[]},
                   {modules,
                       [cowboy,cowboy_app,cowboy_bstr,cowboy_children,
                        cowboy_clear,cowboy_clock,cowboy_compress_h,
                        cowboy_constraints,cowboy_handler,cowboy_http,
                        cowboy_http2,cowboy_loop,cowboy_metrics_h,
                        cowboy_middleware,cowboy_req,cowboy_rest,
                        cowboy_router,cowboy_static,cowboy_stream,
                        cowboy_stream_h,cowboy_sub_protocol,cowboy_sup,
                        cowboy_tls,cowboy_tracer_h,cowboy_websocket]},
                   {registered,[cowboy_sup,cowboy_clock]},
                   {applications,[ranch,crypto,stdlib,cowlib,kernel]},
                   {included_applications,[]},
                   {env,[]},
                   {maxT,infinity},
                   {maxP,infinity},
                   {mod,{cowboy_app,[]}}]}]}},
     {apply,
         {application,load,
             [{application,gun,
                  [{description,
                       "HTTP/1.1, HTTP/2 and Websocket client for Erlang/OTP."},
                   {vsn,"1.3.0"},
                   {id,[]},
                   {modules,
                       [gun,gun_app,gun_content_handler,gun_data_h,gun_http,
                        gun_http2,gun_sse_h,gun_sup,gun_tcp,gun_tls,gun_ws,
                        gun_ws_h]},
                   {registered,[gun_sup]},
                   {applications,[ssl,stdlib,cowlib,kernel]},
                   {included_applications,[]},
                   {env,[]},
                   {maxT,infinity},
                   {maxP,infinity},
                   {mod,{gun_app,[]}}]}]}},
     {apply,
         {application,load,
             [{application,grpc,
                  [{description,"The Elixir implementation of gRPC"},
                   {vsn,"0.4.0"},
                   {id,[]},
                   {modules,
                       ['Elixir.GRPC','Elixir.GRPC.Adapter.Cowboy',
                        'Elixir.GRPC.Adapter.Cowboy.Handler',
                        'Elixir.GRPC.Adapter.Gun','Elixir.GRPC.Channel',
                        'Elixir.GRPC.Client.Stream',
                        'Elixir.GRPC.ClientInterceptor','Elixir.GRPC.Codec',
                        'Elixir.GRPC.Codec.Erlpack','Elixir.GRPC.Codec.Proto',
                        'Elixir.GRPC.Compressor',
                        'Elixir.GRPC.Compressor.Gzip',
                        'Elixir.GRPC.Credential','Elixir.GRPC.Endpoint',
                        'Elixir.GRPC.Logger.Client',
                        'Elixir.GRPC.Logger.Server','Elixir.GRPC.Message',
                        'Elixir.GRPC.Message.Protobuf','Elixir.GRPC.RPCError',
                        'Elixir.GRPC.Server','Elixir.GRPC.Server.Stream',
                        'Elixir.GRPC.Server.Supervisor',
                        'Elixir.GRPC.ServerInterceptor','Elixir.GRPC.Service',
                        'Elixir.GRPC.Status','Elixir.GRPC.Stream',
                        'Elixir.GRPC.Stub','Elixir.GRPC.TimeUtils',
                        'Elixir.GRPC.Transport.HTTP2',
                        'Elixir.GRPC.Transport.Utils',
                        'Elixir.Mix.Tasks.Grpc.Server',grpc_stream_h]},
                   {registered,[]},
                   {applications,
                       [elixir,logger,protobuf,cowboy,stdlib,kernel,gun]},
                   {included_applications,[]},
                   {env,[]},
                   {maxT,infinity},
                   {maxP,infinity}]}]}},
     {apply,
         {application,load,
             [{application,saga,
                  [{description,"saga"},
                   {vsn,"0.1.0"},
                   {id,[]},
                   {modules,
                       ['Elixir.Answer.Authentication','Elixir.Answer.Email',
                        'Elixir.Answer.Facebook',
                        'Elixir.Answer.Facebook.User',
                        'Elixir.Answer.Instagram',
                        'Elixir.Answer.Instagram.User',
                        'Elixir.Answer.Photo.API','Elixir.Authentication',
                        'Elixir.ConsumerGroup','Elixir.Email',
                        'Elixir.ExampleGenConsumer','Elixir.Facebook',
                        'Elixir.Instagram','Elixir.Kafka.Topics',
                        'Elixir.Notification','Elixir.Photo.API',
                        'Elixir.Poison.Encoder.Answer.Authentication',
                        'Elixir.Poison.Encoder.Answer.Email',
                        'Elixir.Poison.Encoder.Answer.Facebook',
                        'Elixir.Poison.Encoder.Answer.Facebook.User',
                        'Elixir.Poison.Encoder.Answer.Instagram',
                        'Elixir.Poison.Encoder.Answer.Instagram.User',
                        'Elixir.Poison.Encoder.Answer.Photo.API',
                        'Elixir.Saga.Api.InitialState.Service',
                        'Elixir.Saga.Api.InitialState.Stub',
                        'Elixir.Saga.Api.ResponseEmail',
                        'Elixir.Saga.Api.ResponseFacebook',
                        'Elixir.Saga.Api.ResponseInstagram',
                        'Elixir.Saga.Api.User','Elixir.Saga.Api.UserFacebook',
                        'Elixir.Saga.Api.UserInstagram',
                        'Elixir.Saga.Application','Elixir.Saga.Endpoint',
                        'Elixir.Saga.Interceptors.AuthClient',
                        'Elixir.Saga.Interceptors.AuthServer',
                        'Elixir.Saga.Server','Elixir.Sagas.Email.SignIn',
                        'Elixir.Sagas.Email.SignUp',
                        'Elixir.Sagas.Facebook.SignIn',
                        'Elixir.Sagas.Facebook.SignUp',
                        'Elixir.Sagas.Instagram.SignIn',
                        'Elixir.Sagas.Instagram.SignUp','Elixir.User']},
                   {registered,[]},
                   {applications,
                       [elixir,logger,gen_state_machine,kafka_ex,poison,grpc,
                        stdlib,kernel]},
                   {included_applications,[]},
                   {env,
                       [{ssl_cert,<<"priv/ssl/server.crt">>},
                        {ssl_key,<<"priv/ssl/server.pem">>},
                        {grpc_host,<<"localhost">>},
                        {grpc_port,<<"50051">>}]},
                   {maxT,infinity},
                   {maxP,infinity},
                   {mod,{'Elixir.Saga.Application',[]}}]}]}},
     {apply,
         {application,load,
             [{application,sasl,
                  [{description,"SASL  CXC 138 11"},
                   {vsn,"3.3"},
                   {id,[]},
                   {modules,
                       [sasl,alarm_handler,format_lib_supp,misc_supp,rb,
                        rb_format_supp,release_handler,release_handler_1,
                        erlsrv,sasl_report,sasl_report_tty_h,
                        sasl_report_file_h,systools,systools_make,systools_rc,
                        systools_relup,systools_lib]},
                   {registered,[sasl_sup,alarm_handler,release_handler]},
                   {applications,[stdlib,kernel]},
                   {included_applications,[]},
                   {env,[]},
                   {maxT,infinity},
                   {maxP,infinity},
                   {mod,{sasl,[]}}]}]}},
     {apply,
         {application,load,
             [{application,runtime_tools,
                  [{description,"RUNTIME_TOOLS"},
                   {vsn,"1.13.2"},
                   {id,[]},
                   {modules,
                       [appmon_info,dbg,observer_backend,runtime_tools,
                        runtime_tools_sup,erts_alloc_config,ttb_autostart,
                        dyntrace,system_information,scheduler,msacc]},
                   {registered,[runtime_tools_sup]},
                   {applications,[stdlib,kernel]},
                   {included_applications,[]},
                   {env,[]},
                   {maxT,infinity},
                   {maxP,infinity},
                   {mod,{runtime_tools,[]}}]}]}},
     {apply,
         {application,load,
             [{application,artificery,
                  [{description,
                       "A toolkit for terminal user interfaces in Elixir"},
                   {vsn,"0.4.2"},
                   {id,[]},
                   {modules,
                       ['Elixir.Artificery','Elixir.Artificery.Command',
                        'Elixir.Artificery.Console',
                        'Elixir.Artificery.Console.Color',
                        'Elixir.Artificery.Console.Color.ANSI',
                        'Elixir.Artificery.Console.Events',
                        'Elixir.Artificery.Console.Prompt',
                        'Elixir.Artificery.Console.Spinner',
                        'Elixir.Artificery.Console.Table',
                        'Elixir.Artificery.Entry','Elixir.Artificery.Option']},
                   {registered,[]},
                   {applications,[elixir,stdlib,kernel]},
                   {included_applications,[]},
                   {env,[]},
                   {maxT,infinity},
                   {maxP,infinity}]}]}},
     {apply,
         {application,load,
             [{application,distillery,
                  [{description,
                       "Build releases of your Mix projects with ease!\n"},
                   {vsn,"2.1.1"},
                   {id,[]},
                   {modules,
                       ['Elixir.Distillery.Cookies',
                        'Elixir.Distillery.Releases.App',
                        'Elixir.Distillery.Releases.Appup',
                        'Elixir.Distillery.Releases.Appup.Transform',
                        'Elixir.Distillery.Releases.Appup.TransformError',
                        'Elixir.Distillery.Releases.Appup.Utils',
                        'Elixir.Distillery.Releases.Archiver',
                        'Elixir.Distillery.Releases.Archiver.Archive',
                        'Elixir.Distillery.Releases.Assembler',
                        'Elixir.Distillery.Releases.BootScript',
                        'Elixir.Distillery.Releases.Checks',
                        'Elixir.Distillery.Releases.Checks.Cookie',
                        'Elixir.Distillery.Releases.Checks.Erts',
                        'Elixir.Distillery.Releases.Checks.LoadedOrphanedApps',
                        'Elixir.Distillery.Releases.Config',
                        'Elixir.Distillery.Releases.Config.LoadError',
                        'Elixir.Distillery.Releases.Config.Provider',
                        'Elixir.Distillery.Releases.Config.Providers.Elixir',
                        'Elixir.Distillery.Releases.Environment',
                        'Elixir.Distillery.Releases.Errors',
                        'Elixir.Distillery.Releases.Overlays',
                        'Elixir.Distillery.Releases.Plugin',
                        'Elixir.Distillery.Releases.Profile',
                        'Elixir.Distillery.Releases.Release',
                        'Elixir.Distillery.Releases.Runtime.Control',
                        'Elixir.Distillery.Releases.Runtime.Pidfile',
                        'Elixir.Distillery.Releases.Shell',
                        'Elixir.Distillery.Releases.Shell.Macros',
                        'Elixir.Distillery.Releases.Utils',
                        'Elixir.Mix.Tasks.Distillery.Gen.Appup',
                        'Elixir.Mix.Tasks.Distillery.Init',
                        'Elixir.Mix.Tasks.Distillery.Init.MixMock',
                        'Elixir.Mix.Tasks.Distillery.Init.MixMock.Project',
                        'Elixir.Mix.Tasks.Distillery.Release',
                        'Elixir.Mix.Tasks.Distillery.Release.Clean']},
                   {registered,[]},
                   {applications,
                       [elixir,stdlib,runtime_tools,artificery,kernel]},
                   {included_applications,[]},
                   {env,[]},
                   {maxT,infinity},
                   {maxP,infinity}]}]}},
     {progress,applications_loaded},
     {apply,{application,start_boot,[kernel,permanent]}},
     {apply,{application,start_boot,[stdlib,permanent]}},
     {apply,{application,start_boot,[compiler,permanent]}},
     {apply,{application,start_boot,[elixir,permanent]}},
     {apply,{'Elixir.Distillery.Releases.Config.Provider',init,[[]]}},
     {apply,{c,erlangrc,[]}},
     {progress,started}]}.
